/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-06-05 00:50:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberEnrollForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1717395722548L));
    _jspx_dependants.put("jar:file:/C:/KH_FINAL/Final_Project/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!-- memberEnrollForm.jsp 태그리브 지시어 추가 0604 - 무진 -->\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Document</title>\r\n");
      out.write("    <!-- jQuery library -->\r\n");
      out.write("    <!-- 온라인 방식 -->\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("    <!-- Popper JS -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("    <!-- Latest compiled JavaScript -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://unpkg.com/swiper@8/swiper-bundle.min.css\" />\r\n");
      out.write("    <script src=\"https://unpkg.com/swiper@8/swiper-bundle.min.js\"></script>\r\n");
      out.write("    <!-- 부트스트랩 및 각종 연동구문 추가 0603 -무진 -->\r\n");
      out.write("     <!-- alertify 연동 구문 -->\r\n");
      out.write("     <!-- 부트스트랩에서 제공하고 있는 스타일 -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n");
      out.write("    <!-- 부트스트랩에서 제공하고 있는 스크립트 -->\r\n");
      out.write("    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <!-- JavaScript -->\r\n");
      out.write("	<script src=\"//cdn.jsdelivr.net/npm/alertifyjs@1.14.0/build/alertify.min.js\"></script>\r\n");
      out.write("	\r\n");
      out.write("	<!-- CSS -->\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.14.0/build/css/alertify.min.css\"/>\r\n");
      out.write("	<!-- Default theme -->\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.14.0/build/css/themes/default.min.css\"/>\r\n");
      out.write("	<!-- Semantic UI theme -->\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/alertifyjs@1.14.0/build/css/themes/semantic.min.css\"/>\r\n");
      out.write("<style>\r\n");
      out.write("	.outer {\r\n");
      out.write("        width: 1000px;\r\n");
      out.write("        /*border: 1px solid red;*/\r\n");
      out.write("        margin: auto;\r\n");
      out.write("        margin-top: 90px;\r\n");
      out.write("    }\r\n");
      out.write("    .memberInfo {\r\n");
      out.write("        border-spacing: 0px 6px;\r\n");
      out.write("    }\r\n");
      out.write("    .required,\r\n");
      out.write("    #enroll-form a {\r\n");
      out.write("        color: #810000;\r\n");
      out.write("    }\r\n");
      out.write("	#enroll-form input {\r\n");
      out.write("		width: 100%;\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("        padding: 5px;\r\n");
      out.write("        border-radius: 0px;\r\n");
      out.write("        border: none;\r\n");
      out.write("        outline: none;\r\n");
      out.write("        padding-left: 10px;\r\n");
      out.write("        border-bottom: 1px solid;\r\n");
      out.write("	}\r\n");
      out.write("    #enroll-form select {\r\n");
      out.write("        height: 100%;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        border: none;\r\n");
      out.write("        outline: none;\r\n");
      out.write("        padding-left: 10px;\r\n");
      out.write("        background-color: #f3f0e3;\r\n");
      out.write("    }\r\n");
      out.write("    #enroll-form th {\r\n");
      out.write("        text-align: left;\r\n");
      out.write("    }\r\n");
      out.write("    #enroll-form button,\r\n");
      out.write("    #enroll-form input[type=button] {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("        border: none;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        background:  linear-gradient(0deg, #630000, #810000);\r\n");
      out.write("        color: rgb(255, 255, 255);\r\n");
      out.write("        height: 30px;\r\n");
      out.write("        font-weight: 900;\r\n");
      out.write("    }\r\n");
      out.write("    input[type=\"number\"]::-webkit-outer-spin-button,\r\n");
      out.write("    input[type=\"number\"]::-webkit-inner-spin-button {\r\n");
      out.write("        -webkit-appearance: none;\r\n");
      out.write("        margin: 0;\r\n");
      out.write("    }\r\n");
      out.write("    .hr {\r\n");
      out.write("        margin: auto;\r\n");
      out.write("        width: 850px;\r\n");
      out.write("        height: 5px;\r\n");
      out.write("        background:  linear-gradient(0deg, #630000, #810000);\r\n");
      out.write("    }\r\n");
      out.write("    body {\r\n");
      out.write("            background-color: #F4F4F4;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("    }\r\n");
      out.write("    .container {\r\n");
      out.write("            max-width: 1000px;\r\n");
      out.write("            margin: 20px auto;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            min-height: calc(100vh - 160px); /* 화면 높이에서 헤더와 푸터를 제외한 높이 설정 */\r\n");
      out.write("    }\r\n");
      out.write("    #enroll-form input[type=\"radio\"] {\r\n");
      out.write("        width: 5%;\r\n");
      out.write("        accent-color: #810000;\r\n");
      out.write("    }\r\n");
      out.write("    .title2 {\r\n");
      out.write("        margin-left: 55px;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- myPage.jsp 일회성 알람문구 처리 script 0604 - 무진 -->\r\n");
      out.write("		");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    <!-- 회원가입 폼(임시)  0604 - 무진 -->\r\n");
      out.write("    <!-- 메뉴바 -->\r\n");
      out.write("    <!--");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "", out, false);
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("    <div class=\"outer\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("        <h2 align=\"center\" style=\"margin-bottom: 5px;\">회원가입</h2>\r\n");
      out.write("        <div class=\"hr\" style=\"width: 105px;\"></div>\r\n");
      out.write("        <br>\r\n");
      out.write("        <h6 style=\"float: right; margin-bottom: 10px;\">* 표시는 반드시 입력해야 합니다</h6>\r\n");
      out.write("        <br clear=\"both\">\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"hr\"></div>\r\n");
      out.write("\r\n");
      out.write("        <h3 class=\"title2\">&nbsp;&nbsp;기본 정보</h3>\r\n");
      out.write("\r\n");
      out.write("        <form id=\"enroll-form\" action=\"\">\r\n");
      out.write("            <table class=\"memberInfo\" align=\"center\" width=\"600\">\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td></td>\r\n");
      out.write("                    <td></td>\r\n");
      out.write("                    <td></td>\r\n");
      out.write("                    <td></td>\r\n");
      out.write("                    <td width=\"20%\"></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th class=\"required\">이름 *</th>\r\n");
      out.write("                    <td colspan=\"4\">\r\n");
      out.write("                        <input id=\"memberName\"\r\n");
      out.write("                               type=\"text\"\r\n");
      out.write("                               name=\"memberName\"\r\n");
      out.write("                               required\r\n");
      out.write("                               placeholder=\"한글 2~5글자\">\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th class=\"required\">아이디 *</th>\r\n");
      out.write("                    <td colspan=\"3\">\r\n");
      out.write("                        <input id=\"memberId\"\r\n");
      out.write("                    		    type=\"text\"\r\n");
      out.write("                    		    name=\"memberId\"\r\n");
      out.write("                    		    required\r\n");
      out.write("                    		    placeholder=\"영문자, 숫자를 포함하여 총 4~12자로\">\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td><button type=\"button\"\r\n");
      out.write("                    			onclick=\"idCheck();\">중복확인</button></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th class=\"required\">비밀번호 *</th>\r\n");
      out.write("                    <td colspan=\"4\">\r\n");
      out.write("                        <input id=\"memberPwd\"\r\n");
      out.write("                    		   type=\"password\"\r\n");
      out.write("                    		   name=\"memberPwd\"\r\n");
      out.write("                    		   required\r\n");
      out.write("                    		   placeholder=\"영문자, 숫자, 특수문자로 총 6~15자\">\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th class=\"required\">비밀번호 확인</th>\r\n");
      out.write("                    <td colspan=\"4\">\r\n");
      out.write("                        <input id=\"memberPwd_check\"\r\n");
      out.write("                               type=\"password\"\r\n");
      out.write("                               required>\r\n");
      out.write("                 \r\n");
      out.write("                            </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr id=\"checkPwd-area\" style=\"display: none;\">\r\n");
      out.write("                	<td></td>\r\n");
      out.write("                	<td colspan=\"3\">\r\n");
      out.write("                		<p id=\"checkPwdMsg\"></p>\r\n");
      out.write("                	</td>\r\n");
      out.write("                	<td></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                \r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>생년월일</th>\r\n");
      out.write("                    <td colspan=\"4\"><input type=\"date\" min=\"14\" max=\"100\" name=\"age\"></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>성별</th>\r\n");
      out.write("                    <td colspan=\"4\" height=\"25\">\r\n");
      out.write("                        <input type=\"radio\" name=\"gender\" id=\"M\" value=\"M\">\r\n");
      out.write("                         <label for=\"M\">남자</label>\r\n");
      out.write("                         <input type=\"radio\" name=\"gender\" id=\"F\" value=\"F\">\r\n");
      out.write("                        <label for=\"F\">여자</label>\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th rowspan=\"3\">주소</th>\r\n");
      out.write("                    <td colspan=\"3\">\r\n");
      out.write("                        <input type=\"text\" id=\"postcode\" name=\"postcode\" placeholder=\"우편번호\">\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <input type=\"button\" onclick=\"execDaumPostcode()\" value=\"우편번호 찾기\"><br>\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td colspan=\"2\">\r\n");
      out.write("                        <input type=\"text\" id=\"roadAddress\" name=\"roadAddress\" placeholder=\"도로명주소\">\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td colspan=\"2\">\r\n");
      out.write("                        <input type=\"text\" id=\"jibunAddress\" name=\"jibunAddress\" placeholder=\"지번주소\" width=\"30%\">\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td colspan=\"2\">\r\n");
      out.write("                        <input type=\"text\" id=\"detailAddress\" name=\"detailAddress\" placeholder=\"상세주소\">\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td colspan=\"2\">\r\n");
      out.write("                        <input type=\"text\" id=\"extraAddress\" name=\"extraAddress\" placeholder=\"참고항목\">\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("                <script>\r\n");
      out.write("                    //본 예제에서는 도로명 주소 표기 방식에 대한 법령에 따라, 내려오는 데이터를 조합하여 올바른 주소를 구성하는 방법을 설명합니다.\r\n");
      out.write("                    function execDaumPostcode() {\r\n");
      out.write("                        new daum.Postcode({\r\n");
      out.write("                            oncomplete: function(data) {\r\n");
      out.write("                                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("                \r\n");
      out.write("                                // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.\r\n");
      out.write("                                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("                                var roadAddr = data.roadAddress; // 도로명 주소 변수\r\n");
      out.write("                                var extraRoadAddr = ''; // 참고 항목 변수\r\n");
      out.write("                \r\n");
      out.write("                                // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("                                // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("                                if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n");
      out.write("                                    extraRoadAddr += data.bname;\r\n");
      out.write("                                }\r\n");
      out.write("                                // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("                                if(data.buildingName !== '' && data.apartment === 'Y'){\r\n");
      out.write("                                   extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("                                }\r\n");
      out.write("                                // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("                                if(extraRoadAddr !== ''){\r\n");
      out.write("                                    extraRoadAddr = ' (' + extraRoadAddr + ')';\r\n");
      out.write("                                }\r\n");
      out.write("                \r\n");
      out.write("                                // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("                                document.getElementById('postcode').value = data.zonecode;\r\n");
      out.write("                                document.getElementById(\"roadAddress\").value = roadAddr;\r\n");
      out.write("                                document.getElementById(\"jibunAddress\").value = data.jibunAddress;\r\n");
      out.write("                                \r\n");
      out.write("                                // 참고항목 문자열이 있을 경우 해당 필드에 넣는다.\r\n");
      out.write("                                if(roadAddr !== ''){\r\n");
      out.write("                                    document.getElementById(\"extraAddress\").value = extraRoadAddr;\r\n");
      out.write("                                } else {\r\n");
      out.write("                                    document.getElementById(\"extraAddress\").value = '';\r\n");
      out.write("                                }\r\n");
      out.write("                            }\r\n");
      out.write("                        }).open();\r\n");
      out.write("                    }\r\n");
      out.write("                </script>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th class=\"required\">전화번호 *</th>\r\n");
      out.write("                    <td colspan=\"3\">\r\n");
      out.write("                        <input id=\"phone\"\r\n");
      out.write("                    		   type=\"number\"\r\n");
      out.write("                    		   name=\"phone\"\r\n");
      out.write("                    		   placeholder=\"- 제외하고 숫자 11글자\"\r\n");
      out.write("                               required>\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td><button type=\"button\"\r\n");
      out.write("                    			onclick=\"phoneCheck();\">중복확인</button></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th class=\"required\">이메일 *</th>\r\n");
      out.write("                    <td colspan=\"3\">\r\n");
      out.write("                        <input id=\"email\" type=\"email\" name=\"email\" required>\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td><button type=\"button\"\r\n");
      out.write("                    			onclick=\"emailCheck();\">중복확인</button></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("\r\n");
      out.write("            <br><br>\r\n");
      out.write("            <div class=\"hr\"></div>\r\n");
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            <h3 class=\"title2\">&nbsp;&nbsp;약관 동의</h3>\r\n");
      out.write("            <table align=\"center\" width=\"600px\">\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>이용약관 동의</th>\r\n");
      out.write("                    <td><input type=\"checkbox\" id=\"checkAll\"></td>\r\n");
      out.write("                    <td style=\"color: #810000; font-weight: 900;\">모든 약관을 확인하고 전체 동의합니다.</td>\r\n");
      out.write("                    <td></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th></th>\r\n");
      out.write("                    <td><input type=\"checkbox\" class=\"checkbox\" required></td>\r\n");
      out.write("                    <td>(필수) 이용약관</td>\r\n");
      out.write("                    <td>전체보기 ></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th></th>\r\n");
      out.write("                    <td><input type=\"checkbox\" class=\"checkbox\" required></td>\r\n");
      out.write("                    <td>(필수) 개인정보 수집 및 이용</td>\r\n");
      out.write("                    <td>전체보기 ></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th></th>\r\n");
      out.write("                    <td><input type=\"checkbox\" class=\"checkbox\"></td>\r\n");
      out.write("                    <td>(선택) 정보 수신 동의</td>\r\n");
      out.write("                    <td></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th></th>\r\n");
      out.write("                    <td><input type=\"checkbox\" class=\"checkbox\" required></td>\r\n");
      out.write("                    <td>(필수) 본인은 만 14세 이상입니다</td>\r\n");
      out.write("                    <td></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("            <script>\r\n");
      out.write("                $(function() {\r\n");
      out.write("                    // 첫 번째 체크박스가 변경될 때 실행되는 함수\r\n");
      out.write("                    $('#checkAll').change(function(){\r\n");
      out.write("                        // 첫 번째 체크박스의 상태에 따라 나머지 체크박스들의 상태를 변경\r\n");
      out.write("                        $('.checkbox').prop('checked', $(this).prop('checked'));\r\n");
      out.write("                    });\r\n");
      out.write("                });\r\n");
      out.write("            </script>\r\n");
      out.write("            <br><br>\r\n");
      out.write("            <div id=\"btns\" align=\"center\">\r\n");
      out.write("            	<button id=\"enrollBtn\" type=\"submit\"\r\n");
      out.write("                        onclick=\"return validate();\"\r\n");
      out.write("                        style=\"width: 300px; height: 50px; font-size: 20px; font-weight: 900;\"\r\n");
      out.write("                        disabled>가입하기</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <br><br>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 푸터바 -->\r\n");
      out.write("    <!--");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "", out, false);
      out.write("-->\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    <!-- 유효성검사 -->\r\n");
      out.write("    <script>\r\n");
      out.write("        function validate() {\r\n");
      out.write("            let memberId = $(\"#memberId\").val();\r\n");
      out.write("            let memberPwd = $(\"#memberPwd\").val();\r\n");
      out.write("            let memberPwd_check = $(\"#memberPwd_check\").val();\r\n");
      out.write("            let memberName = $(\"#memberName\").val();\r\n");
      out.write("            let memberPhone = $(\"#phone\").val();\r\n");
      out.write("\r\n");
      out.write("            let checkId = /^[a-z0-9]{4,11}$/i; //영문자, 숫자를 포함하여 총 4~12자\r\n");
      out.write("            let checkPwd = /^\\S{6,15}$/; //영문자, 숫자, 특수문자로 총 8~15자\r\n");
      out.write("            let checkName = /^[가-힣]{2,5}$/; //한글로만 이루어져야 하며 2~5글자\r\n");
      out.write("            let checkPhone = /^[0-9]{11}$/; //숫자 11글자\r\n");
      out.write("\r\n");
      out.write("            if(!checkId.test(memberId)) {\r\n");
      out.write("                alert(\"아이디 형식이 잘못되었습니다.\");\r\n");
      out.write("                $(\"#memberId\").select();\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            if(!checkPwd.test(memberPwd)) {\r\n");
      out.write("                alert(\"비밀번호 형식이 잘못되었습니다.\");\r\n");
      out.write("                $(\"#memberPwd\").select();\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            if(memberPwd != memberPwd_check) {\r\n");
      out.write("                alert(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("                $(\"#memberPwd_check\").select();\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            if(!checkName.test(memberName)) {\r\n");
      out.write("                alert(\"이름 형식이 잘못되었습니다.\");\r\n");
      out.write("                $(\"#memberName\").select();\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            if(!checkPhone.test(memberPhone)) {\r\n");
      out.write("                alert(\"전화번호 형식이 잘못되었습니다.\");\r\n");
      out.write("                $(\"#phone\").select();\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("        let checkId = false;\r\n");
      out.write("        let checkPhone = false;\r\n");
      out.write("        let checkEmail = false;\r\n");
      out.write("        //아이디 중복 검사\r\n");
      out.write("        function idCheck() {\r\n");
      out.write("            let $memberId = $(\"#memberId\");\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: \"");
      out.print(request.getContextPath());
      out.write("/checkId.me\",\r\n");
      out.write("                type: \"post\",\r\n");
      out.write("                data: {memberId: $memberId.val()},\r\n");
      out.write("                success: function(result) {\r\n");
      out.write("                    if(result > 0) {\r\n");
      out.write("                        alert(\"이미 사용중인 아이디입니다.\");\r\n");
      out.write("                        $memberId.focus();\r\n");
      out.write("                    } else {\r\n");
      out.write("                        if(confirm(\"사용 가능한 아이디입니다. 사용하시겠습니까?\")) {\r\n");
      out.write("                            $memberId.attr(\"readonly\", true);\r\n");
      out.write("                            checkId = true;\r\n");
      out.write("                        } else {\r\n");
      out.write("                            $memberId.focus();\r\n");
      out.write("                            checkId = false;\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error: function() {}\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        //비밀번호 일치 검사\r\n");
      out.write("        $(function() {\r\n");
      out.write("            $('#memberPwd, #memberPwd_check').keyup(function() {\r\n");
      out.write("                let a = $(\"#memberPwd\").val();\r\n");
      out.write("                let b = $(\"#memberPwd_check\").val();\r\n");
      out.write("                let msg = $(\"#checkPwdMsg\");\r\n");
      out.write("                if(a == b) {\r\n");
      out.write("                    msg.text(\"일치\");\r\n");
      out.write("                } else {\r\n");
      out.write("                    msg.text(\"불일치\");\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        //전화번호 중복 검사\r\n");
      out.write("        function phoneCheck() {\r\n");
      out.write("            let $phone = $(\"#phone\");\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: \"");
      out.print(request.getContextPath());
      out.write("/checkPhone.me\",\r\n");
      out.write("                type: \"post\",\r\n");
      out.write("                data: {phone: $phone.val()},\r\n");
      out.write("                success: function(result) {\r\n");
      out.write("                    if(result > 0) {\r\n");
      out.write("                        alert(\"이미 사용중인 번호입니다.\");\r\n");
      out.write("                        $phone.focus();\r\n");
      out.write("                    } else {\r\n");
      out.write("                        if(confirm(\"사용 가능한 번호입니다. 사용하시겠습니까?\")) {\r\n");
      out.write("                            $phone.attr(\"readonly\", true);\r\n");
      out.write("                            checkPhone = true;\r\n");
      out.write("                        } else {\r\n");
      out.write("                            $phone.focus();\r\n");
      out.write("                            checkPhone = false;\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error: function() {}\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        //이메일 중복체크\r\n");
      out.write("        function emailCheck() {\r\n");
      out.write("            let $email = $(\"#email\");\r\n");
      out.write("            $.ajax({\r\n");
      out.write("            	// memberEnrollForm.jsp URL 주소값 변경 0605 - 무진\r\n");
      out.write("                url: \"");
      out.print(request.getContextPath());
      out.write("/checkEmail.me\",\r\n");
      out.write("                type: \"post\",\r\n");
      out.write("                data: {email: $email.val()},\r\n");
      out.write("                success: function(result) {\r\n");
      out.write("                    if(result > 0) {\r\n");
      out.write("                        alert(\"이미 사용중인 이메일입니다.\");\r\n");
      out.write("                        $email.focus();\r\n");
      out.write("                    } else {\r\n");
      out.write("                        if(confirm(\"사용 가능한 이메일입니다. 사용하시겠습니까?\")) {\r\n");
      out.write("                            $email.attr(\"readonly\", true);\r\n");
      out.write("                            checkEmail = true;\r\n");
      out.write("                        } else {\r\n");
      out.write("                            $email.focus();\r\n");
      out.write("                            checkEmail = false;\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error: function() {}\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("            \r\n");
      out.write("        //회원가입 가능 여부 체크\r\n");
      out.write("        $(function() {\r\n");
      out.write("            setInterval(checkInfo, 1000);\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        function checkInfo() {\r\n");
      out.write("            if(checkId && checkPhone && checkEmail) {\r\n");
      out.write("                $(\"#enrollBtn\").removeAttr(\"disabled\");\r\n");
      out.write("            } else {\r\n");
      out.write("                $(\"#enrollBtn\").attr(\"disabled\", true);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/member/memberEnrollForm.jsp(115,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.alertMsg }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<script>\r\n");
          out.write("			alertify.alert('알림', '");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.alertMsg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("', function(){ alertify.success('Ok'); });\r\n");
          out.write("			</script>\r\n");
          out.write("			");
          if (_jspx_meth_c_005fremove_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fremove_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:remove
    org.apache.taglibs.standard.tag.common.core.RemoveTag _jspx_th_c_005fremove_005f0 = (org.apache.taglibs.standard.tag.common.core.RemoveTag) _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.common.core.RemoveTag.class);
    boolean _jspx_th_c_005fremove_005f0_reused = false;
    try {
      _jspx_th_c_005fremove_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fremove_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /WEB-INF/views/member/memberEnrollForm.jsp(119,3) name = var type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fremove_005f0.setVar("alertMsg");
      // /WEB-INF/views/member/memberEnrollForm.jsp(119,3) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fremove_005f0.setScope("session");
      int _jspx_eval_c_005fremove_005f0 = _jspx_th_c_005fremove_005f0.doStartTag();
      if (_jspx_th_c_005fremove_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.reuse(_jspx_th_c_005fremove_005f0);
      _jspx_th_c_005fremove_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fremove_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fremove_005f0_reused);
    }
    return false;
  }
}
