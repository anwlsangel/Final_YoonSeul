<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="reviewMapper">

	<resultMap type="review" id="reviewResultSet">
	 	<result column="REVIEW_ID" property="reviewId"/>
	 	<result column="REVIEW_CONTENT" property="reviewContent"/>
	 	<result column="REVIEW_POINT" property="reviewPoint"/>
	 	<result column="WRITE_DATE" property="writeDate"/>
	 	<result column="USER_ID" property="userId"/>
	 	<result column="CONCERT_ID" property="concertId"/>
	 </resultMap>
	 
	 <select id="selectReview" resultType="_int" resultMap="reviewResultSet">
	 	SELECT *
	 	  FROM REVIEW
	 	 WHERE CONCERT_ID = #{concertId}
	 	   AND STATUS = 1
	 </select>
	 
	 <insert id="insertReview" parameterType="review">
	 	INSERT INTO REVIEW(REVIEW_ID,
                   REVIEW_CONTENT,
                   REVIEW_POINT,
                   WRITE_DATE,
                   USER_ID,
                   CONCERT_ID)
            VALUES(SEQ_RNO.NEXTVAL,
                   #{reviewContent},
                   #{reviewPoint},
                   SYSDATE,
                   #{userId},
                   #{concertId})
	 </insert>
	 
	 <select id="selectCount" resultType="_int">
	 	SELECT COUNT(*)
		  FROM REVIEW
		 WHERE CONCERT_ID = #{concertId}
		   AND STATUS = 1
	 </select>
	 
	 <!-- 후기 페이징용 조회 -->
	    <select id="selectReviewList" parameterType="_int" resultMap="reviewResultSet">
    	SELECT * 
		  FROM REVIEW R 
		 WHERE CONCERT_ID = #{concertId}
		   AND R.STATUS = 1 
	</select>
	 
	 <!-- 후기 삭제 -->
	 <update id="deleteReview" parameterType="_int">
	  	UPDATE REVIEW
		   SET STATUS = 2
		 WHERE REVIEW_ID = #{reviewId}
		   AND STATUS = 1 
	 </update>
	 
	 <!-- 후기 수정 -->
	 <update id="updateReview" parameterType="review">
	 	UPDATE REVIEW
	 	   SET REVIEW_CONTENT = #{reviewContent}
	 	 WHERE REVIEW_ID = #{reviewId}
	 	   AND STATUS = 1
	 </update>
	 
	<!-- 별점 평균 조회 -->
	<select id="selectStar"  resultType="_int">
		SELECT AVG(REVIEW_POINT)
		  FROM REVIEW
		 WHERE CONCERT_ID = #{concertId}
		   AND STATUS = 1
	</select>
	
	<!-- 관리자 -->
	
	<!-- 리뷰 전체 조회 -->
	 <select id="AdReviewList" resultMap="reviewResultSet">
	 	SELECT *
	 	  FROM REVIEW
	 </select>
	 
	 <!-- 리뷰 상세 조회 -->
	 <select id="adreviewDetail" parameterType="_int" resultMap="reviewResultSet">
	  SELECT REVIEW_ID
		   , REVIEW_CONTENT
		   , REVIEW_POINT
		   , TO_CHAR(WRITE_DATE, 'YYYY-MM-DD') AS "WRITE_DATE"
		   , USER_ID
		   , CONCERT_ID
		   , STATUS	    
	    FROM REVIEW
	   WHERE REVIEW_ID = #{reviewId}
 	</select>
	 
	<!-- 리뷰 삭제 -->
 	<update id="AdReviewDelete" parameterType="_int">
		UPDATE REVIEW
 		   SET STATUS = 2
 		 WHERE REVIEW_ID = #{reviewId}
 		   AND STATUS = 1
 	</update>
 	
 	<!-- 리뷰 활성화 -->
 	<update id="AdReviewUpdate" parameterType="_int">
		UPDATE REVIEW
 		   SET STATUS = 1
 		 WHERE REVIEW_ID = #{reviewId}
 		   AND STATUS = 2
 	</update>
	
</mapper>