<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="paymentMapper">

	<!-- BUYLIST 테이블의 조회 결과를 BuyList VO 객체로 옮겨주는 ResultMap -->
	<resultMap type="buylist" id="buylistResultSet">
		<result column="BUYLIST_ID" property="buyListId"/>
		<result column="RESERVE_CODE" property="reserveCode"/>
		<result column="RESERVE_CONCERT_ID" property="reserveConcertId"/>
		<result column="RESERVE_TICKET" property="reserveTicket"/>
		<result column="RESERVE_SUM" property="reserveSum"/>
		<result column="RESERVE_PAYMENT" property="reservePayment"/>
		<result column="RESERVE_REFUND" property="reserveRefund"/>
		<result column="USER_ID" property="userId"/>
		<result column="STATUS" property="status"/>
	</resultMap>
	<resultMap type="concert" id="concertResultSet">
		<result column="CONCERT_ID" property="concertId"/>
		<result column="CONCERT_NAME" property="concertName"/>
		<result column="AGE_LIMIT" property="ageLimit"/>
		<result column="PRICE" property="price"/>
		<result column="THUMBNAIL_ROOT" property="thumbnailRoot"/>
		<result column="DETAIL_ROOT" property="detailRoot"/>
		<result column="PLAYTIME" property="playTime"/>
		<result column="START_DATE" property="startDate"/>
		<result column="END_DATE" property="endDate"/>
		<result column="CATEGORY" property="category"/>
		<result column="HOLE_NAME" property="holeName"/>
	</resultMap>
	
	<!-- 결제정보 저장 -->
	<insert id="insertPaymentInfo" parameterType="buylist">
		INSERT INTO BUYLIST
		VALUES(#{buyListId}
		     , #{reserveCode}
		     , #{reserveConcertId}
		     , #{reserveTicket}
		     , #{reserveSum}
		     , SYSDATE
		     , NULL
		     , #{userId}
		     , 1)
	</insert>
	
	<!-- 환불일 업데이트 -->
	<update id="updateReserveRefund" parameterType="string">
		UPDATE BUYLIST
		   SET RESERVE_REFUND = SYSDATE
		   	 , STATUS = 0
		 WHERE BUYLIST_ID = #{merchant_uid}
		   AND STATUS = 2
	</update>
	
	<!-- 예매내역 상세조회 -->
	<select id="selectBuyList" parameterType="string" resultMap="buylistResultSet">
		SELECT *
		  FROM BUYLIST
		 WHERE BUYLIST_ID = #{tno}
	</select>
	<select id="selectConcert" parameterType="string" resultMap="concertResultSet">
		SELECT *
		  FROM CONCERT_INFO
		 WHERE CONCERT_ID = #{concertId}
	</select>
	
	<!-- 관리자-결제내역전체조회 -->
	<select id="selectPaymentList" resultMap="buylistResultSet">
		SELECT BUYLIST_ID
		     , CONCERT_NAME AS "RESERVE_CONCERT_ID"
		     , RESERVE_SUM
		     , RESERVE_PAYMENT
		     , RESERVE_REFUND
		     , USER_ID
		     , B.STATUS
		  FROM BUYLIST B
		  JOIN CONCERT_INFO ON (RESERVE_CONCERT_ID = CONCERT_ID)
	</select>
	<!-- 관리자-환불요청내역조회 -->
	<select id="selectRefundList" resultMap="buylistResultSet">
		SELECT BUYLIST_ID
		     , CONCERT_NAME AS "RESERVE_CONCERT_ID"
		     , RESERVE_SUM
		     , RESERVE_PAYMENT
		     , RESERVE_REFUND
		     , USER_ID
		     , B.STATUS
		  FROM BUYLIST B
		  JOIN CONCERT_INFO ON (RESERVE_CONCERT_ID = CONCERT_ID)
		 WHERE B.STATUS = 2
	</select>
	
	<!-- 마이페이지-환불요청 -->
	<update id="requestRefund" parameterType="string">
		UPDATE BUYLIST
		   SET STATUS = 2
		 WHERE BUYLIST_ID = #{buyListId}
		   AND STATUS = 1
	</update>
	
	<!-- 마이페이지-환불요청취소 -->
	<update id="cancelRefund" parameterType="string">
		UPDATE BUYLIST
		   SET STATUS = 1
		 WHERE BUYLIST_ID = #{buyListId}
		   AND STATUS = 2
	</update>
	
	<!-- 환불 거부 -->
	<update id="rejectRefund" parameterType="string">
		UPDATE BUYLIST
		   SET STATUS = 1
		 WHERE BUYLIST_ID = #{buyListId}
		   AND STATUS = 2
	</update>
	
	<!-- 좌석 상태 변경 (결제중) -->
	<insert id="startPayment" parameterType="ticket">
		INSERT INTO TICKET(TICKET_ID
						 , STATUS
		                 , CONCERT_DATE_ID
		                 , SEAT_ID
		                 , BUYLIST_ID)
		            VALUES(SEQ_SNO.NEXTVAL
		            	 , 1
		                 , #{concertDateId}
		                 , #{seatId}
		                 , 0)
	</insert>
	
	<!-- 좌석 상태 변경 (구매불가) -->
	<update id="endPayment" parameterType="ticket">
		UPDATE TICKET
		   SET STATUS = 0
		     , BUYLIST_ID = #{buyListId}
		 WHERE CONCERT_DATE_ID = #{concertDateId}
		   AND SEAT_ID = #{seatId}
		   AND STATUS = 2
	</update>
	
	<!-- 좌석 상태 변경 (구매가능) -->
	<delete id="cancelPayment" parameterType="ticket">
		DELETE FROM TICKET
		 WHERE CONCERT_DATE_ID = #{concertDateId}
		   AND SEAT_ID = #{seatId}
	</delete>
	
	<!-- 좌석 상태 변경 (구매가능) -->
	<delete id="deleteTicket" parameterType="string">
		DELETE FROM TICKET
		 WHERE BUYLIST_ID = #{buyListId}
	</delete>
	
</mapper>

	